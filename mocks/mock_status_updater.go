// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/gocircum/gocircum/mobile/bridge (interfaces: StatusUpdater)
//
// Generated by this command:
//
//	mockgen -package=mocks -destination=../../mocks/mock_status_updater.go github.com/gocircum/gocircum/mobile/bridge StatusUpdater
//

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockStatusUpdater is a mock of StatusUpdater interface.
type MockStatusUpdater struct {
	ctrl     *gomock.Controller
	recorder *MockStatusUpdaterMockRecorder
	isgomock struct{}
}

// MockStatusUpdaterMockRecorder is the mock recorder for MockStatusUpdater.
type MockStatusUpdaterMockRecorder struct {
	mock *MockStatusUpdater
}

// NewMockStatusUpdater creates a new mock instance.
func NewMockStatusUpdater(ctrl *gomock.Controller) *MockStatusUpdater {
	mock := &MockStatusUpdater{ctrl: ctrl}
	mock.recorder = &MockStatusUpdaterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockStatusUpdater) EXPECT() *MockStatusUpdaterMockRecorder {
	return m.recorder
}

// OnStatusUpdate mocks base method.
func (m *MockStatusUpdater) OnStatusUpdate(status, message string) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "OnStatusUpdate", status, message)
}

// OnStatusUpdate indicates an expected call of OnStatusUpdate.
func (mr *MockStatusUpdaterMockRecorder) OnStatusUpdate(status, message any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "OnStatusUpdate", reflect.TypeOf((*MockStatusUpdater)(nil).OnStatusUpdate), status, message)
}
