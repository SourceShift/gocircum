name: Go CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.21'

    - name: Install dependencies
      run: go get .

    - name: Run golangci-lint
      uses: golangci/golangci-lint-action@v6
      with:
        # Optional: version of golangci-lint to use in form of v1.2.3, defaults to latest if not specified
        version: v1.59.1

    - name: Build Core Library
      run: go build -v ./...

    - name: Run tests with coverage
      run: go test -race -coverprofile=coverage.out -covermode=atomic ./...

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v5
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        slug: SourceShift/gocircum

    - name: Run GoReleaser in snapshot mode
      uses: goreleaser/goreleaser-action@v5
      with:
        version: v1.26.2
        args: release --snapshot --clean
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Build Mobile Bindings
      run: |
        # This is a placeholder. A real build would require a more complex
        # setup with Android NDK and Xcode.
        echo "Simulating mobile build..."
        go install golang.org/x/mobile/cmd/gomobile@latest
        gomobile init
        # gomobile bind -target=android ./mobile/bridge
        # gomobile bind -target=ios ./mobile/bridge
        echo "Mobile build placeholder complete."

  release:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v5
        with:
          version: v1.26.2
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

