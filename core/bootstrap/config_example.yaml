# Example bootstrap configuration
health_check:
  enabled: true
  timeout: 2s
  concurrency: 5
  required_success_rate: 0.7

cache_ttl: 24h

# No hardcoded fallbacks - use cryptographic generation only
fallback_config:
  dga_enabled: true
  dga_algorithm: "sha256_time_based"
  seed_rotation_interval: "6h"
  backup_discovery_channels:
    - type: "steganographic"
      platform: "twitter"
    - type: "blockchain"
      network: "ethereum"

providers:
  - type: "doh"
    enabled: true
    priority: 100
    config:
      providers:
        - "cloudflare"
        - "google"
        - "quad9"
      urls:
        cloudflare: "https://dns.cloudflare.com/dns-query"
        google: "https://dns.google/resolve"
        quad9: "https://dns.quad9.net/dns-query"
      server_names:
        cloudflare: "dns.cloudflare.com"
        google: "dns.google"
        quad9: "dns.quad9.net"
      query_timeout: 5s
      max_retries: 3

  - type: "domain_fronting"
    enabled: true
    priority: 90
    config:
      front_domains:
        - "www.google.com"
        - "a0.awsstatic.com"
        - "www.cloudflare.com"
      target_domains:
        - "bootstrap.gocircum.com"
      front_cdns:
        google:
          - "www.google.com"
          - "www.youtube.com"
        amazon:
          - "a0.awsstatic.com"
          - "s3.amazonaws.com"
        cloudflare:
          - "www.cloudflare.com"
          - "cdnjs.cloudflare.com"
      rotation_interval: 1h
      connect_timeout: 10s

  - type: "well_known"
    enabled: true
    priority: 80
    config:
      endpoints:
        - "https://cdn.gocircum.com/.well-known/bootstrap"
        - "https://api.gocircum.com/.well-known/bootstrap"
        - "https://bootstrap.gocircum.com/.well-known/bootstrap"
      query_timeout: 5s
      response_format: "json"

  - type: "ip_pool"
    enabled: true
    config:
      initial_size: 50
      max_size: 1000
      min_size: 10
      refresh_interval: 12h
      persist_path: "/var/lib/gocircum/bootstrap_pool.json"

# BootstrapConfig Example
# This example shows how to configure bootstrap discovery

# Enable dynamic discovery channels and disable static endpoints
use_discovery_channels: true
use_cached_bootstraps: true
cache_ttl: 24h

# Configure health check options for discovered bootstraps
health_check:
  enabled: true
  timeout: 5s
  connection_type: tcp
  required_success_count: 2
  max_parallelism: 20

# Configure entropy sources for domain generation
entropy:
  sources:
    - type: time
      weight: 0.5
    - type: blockchain
      weight: 0.3
      block_source: ethereum
    - type: dns
      weight: 0.2
      seeds:
        - seed1.example.org
        - seed2.example.org

# Configure discovery channels
discovery_channels:
  - type: dns
    enabled: true
    priority: 100
    timeout: 15s
    options:
      domains_per_iteration: 5
      record_types:
        - TXT
        - SRV
  
  - type: https
    enabled: true
    priority: 80
    timeout: 20s
    options:
      path_template: "/.well-known/bootstrap"
      client_timeout: 10s
  
  - type: peer_exchange
    enabled: true
    priority: 60
    timeout: 30s
    options:
      refresh_interval: 1h
      max_peers: 50
      # Only used for initial bootstrap - future peers are discovered dynamically
      initial_peers:
        - bootstrap1.example.org:443
        - bootstrap2.example.org:443

# Deprecated providers - will be removed in the future
providers:
  - type: doh
    enabled: false
    priority: 50
    providers:
      - https://cloudflare-dns.com/dns-query
      - https://dns.google/dns-query
  
  - type: domain_fronting
    enabled: false
    priority: 40
    hosts:
      - front: cdn.example.com
        target: hidden.example.com
  
  - type: well_known
    enabled: false
    priority: 30 